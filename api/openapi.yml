swagger: "2.0"

info:
  title: ETNAir
  description: "A website to rent a place for a certain time."
  version: 0.0.1

servers:
  - url: http://localhost:3000
    description: "Development server"

tags:
  - name: user
    description: "Routes related to users."
  - name: rentals
    description: "Routes related to rentals."

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "`Write the token with the \"Bearer: \" prefix: \"Bearer MY_TOKEN\".`"

paths:
  /users:
    get:
      security:
        - Bearer: []
      tags:
        - user
      description: "A list of all users."
      responses:
        200:
          description: "Return all the users of the database."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: "Unauthorized access: token required !"
  /auth/register:
    post:
      tags:
        - user
      description: "Create a new user"
      parameters:
        - in: body
          name: body
          description: "User informations for the creation."
          required: true
          schema:
            $ref: "#/components/schemas/User"
      responses:
        201:
          description: "Return a message to confirm the creation."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: "Bad request: Invalid parameters !"
        409:
          description: "Conflict: Duplicate phone number or email !"
  /auth/login:
    post:
      tags:
        - user
      description: "Connect a user and generate a token."
      parameters:
        - in: body
          name: body
          description: "User informations to log in."
          required: true
          schema:
            $ref: "#/components/schemas/Login"
      responses:
        200:
          description: "Return a message to confirm the connection."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
        401:
            description: "Bad request: Wrong password !"
        404:
            description: "Bad request: Wrong email !"
  /user:
    get:
      security:
        - Bearer: []
      tags:
        - user
      description: "Return informations about the user connected."
      responses:
        200:
          description: "Return the user's informations."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: "Unauthorized access: token required !"
    put:
      security:
        - Bearer: []
      tags:
        - user
      description: "Update the user."
      parameters:
        - in: body
          name: body
          description: "User informations to update."
          required: true
          schema:
            $ref: "#/components/schemas/User"
      responses:
      200:
        description: "Return a message to confirm the update."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      401:
        description: "Unauthorized access: token required !"
    delete:
      security:
        - Bearer: []
      tags:
        - user
      description: "Delete the user."
      responses:
        204:
          description: "Return a message to confirm the deletion."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: "Unauthorized access: token required !"
  /rentals:
    get:
      tags:
        - rentals
      description: "A list of all rentals."
      responses:
        200:
          description: "Return all the rentals of the database."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rental"
  /rental:
    post:
      security:
        - Bearer: []
      tags:
        - rentals
      description: "Create a new rental."
      parameters:
        - in: body
          name: body
          description: "Rental informations for the creation."
          required: true
          schema:
            $ref: "#/components/schemas/Rental"
      responses:
        201:
          description: "Return a message to confirm the creation."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rental"
        400:
          description: "Bad request: Invalid parameters !"
        401:
          description: "Unauthorized access: token required !"
  /rental/{id}:
    parameters:
      - name: id
        in: path
        description: "The id of the rental."
        required: true
        schema:
          type: integer
    get:
      tags:
        - rentals
      description: "Return informations about the selected rental."
      responses:
        200:
          description: "Return the rental's informations."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rental"
        404:
          description: "Bad request: Rental not found !"
    put:
      security:
        - Bearer: []
      tags:
        - rentals
      description: "Update a rental."
      parameters:
        - in: body
          name: body
          description: "Rental informations to update."
          required: true
          schema:
            $ref: "#/components/schemas/Rental"
      responses:
        200:
          description: "Return a message to confirm the update."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rental"
        400:
          description: "Bad request: Invalid parameters !"
        401:
          description: "Unauthorized access: token required !"
    delete:
      tags:
        - rentals
      description: "Delete the rental."
      responses:
        204:
          description: "Return a message to confirm the deletion."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rental"
        404:
          description: "Bad request: Rental not found !"

components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
        about_me:
          type: string
        phone_number:
          type: string
      additionalProperties: false
      required:
        - email
        - name
        - password
        - phone_number
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      additionalProperties: false
      required:
        - email
        - password
    Rental:
      type: object
      properties:
        title:
          type: string
        nb_person:
          type: integer
        price:
          type: integer
        available_date:
          type: string
          format: date-time
        type:
          type: string
      additionalProperties: false
      required:
        - title
        - nb_person
        - price
        - available_date
        - type
