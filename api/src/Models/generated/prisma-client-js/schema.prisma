datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "omitApi"]
  output          = "./generated/prisma-client-js"
}

model Rental {
  id              String         @id @default(uuid())
  title           String
  nb_person       Int
  price           Float
  available_date  DateTime
  type            Types
  userId          String
  adressId        String         @unique
  caracteristicId String?        @unique
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  caracteristic   Caracteristic? @relation(fields: [caracteristicId], references: [id], onDelete: Cascade)
  address         Address        @relation(fields: [adressId], references: [id], onDelete: Cascade)
  picture         Picture[]
}

model Address {
  id       String   @id @default(uuid())
  city     String
  country  String
  street   String
  zip_code String
  rental   Rental[]
}

model Caracteristic {
  id          String   @id @default(uuid())
  nb_bedroom  Int?
  nb_bathroom Int
  description String
  rental      Rental[]
}

model Picture {
  id       String @id @default(uuid())
  url      String
  rentalId String
  rental   Rental @relation(fields: [rentalId], references: [id], onDelete: Cascade)
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  password     String
  about_me     String?
  phone_number String   @unique
  user_type    UserType @default(CLIENT)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Rental       Rental[]
}

enum Types {
  HOUSE
  APARTMENT
  CASTLE
  TINY_HOUSE
}

enum UserType {
  ADMIN
  CLIENT
}
